package Initializer.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.part.ProjectPluginPart;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import de.slisson.mps.hacks.editor.EditorComponentCreationListener;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.nodeEditor.EditorComponent;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;

public class EditorComponentListener_ProjectPluginPart extends ProjectPluginPart {
  private static final Logger LOG = LogManager.getLogger(EditorComponentListener_ProjectPluginPart.class);
  private EditorComponentCreationListener editorComponentCreationListener;
  public EditorComponentListener_ProjectPluginPart() {
  }
  @Override
  public void init(MPSProject project) {
    EditorComponentListener_ProjectPluginPart.this.editorComponentCreationListener = new EditorComponentCreationListener(project) {
      public void editorComponentCreate(EditorComponent editorComponent) {
        if (editorComponent != null && editorComponent.getEditedNode() != null) {
          SNode node = editorComponent.getEditedNode();
          if (SNodeOperations.getContainingRoot(node) == node) {
            LoggingRuntime.logMsgView(Level.WARN, "Created component for node " + editorComponent.getEditedNode().getName(), EditorComponentListener_ProjectPluginPart.class, null, null);
          }
        }
      }
      public void editorComponentDisposed(EditorComponent editorComponent) {
      }
    };
    EditorComponentListener_ProjectPluginPart.this.editorComponentCreationListener.start(true);
  }
  @Override
  public void dispose(MPSProject project) {
    EditorComponentListener_ProjectPluginPart.this.editorComponentCreationListener.stop();
  }
}
